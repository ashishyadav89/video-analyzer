{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The remote location for resolving supporting files."
            }  
        },
        "edgeDeviceConnectionString": {
            "type": "string",
            "metadata": {
                "description": "The connection string that will be used to register the device with the IoT Hub."
            }
        }, 
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "The name of the VM hosting the Azure IoT Edge runtime."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the VM. SSH key is recommended."
            }
        },
        "adminUsername": {
            "metadata": {
                "description": "The username for accesing the edge device."
            },
            "defaultValue": "avaadmin",
            "type": "string"
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This should be a version supported by the IoT Edge runtime."
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "sample": "azure-video-analyzer"
            }
        }
    },
    "variables": {
        "dcs": "[parameters('edgeDeviceConnectionString')]",
        "nsgName": "[concat(parameters('vmName'),'-nsg-allow-ssh')]",
        "vnetName": "[concat(parameters('vmName'),'-vnet')]",
        "pipName": "[concat(parameters('vmName'),'-pip')]",
        "nicName": "[concat(parameters('vmName'),'-nic')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "customData": "[base64(concat('#cloud-config\n\napt:\n (\n curl https://packages.microsoft.com/config/ubuntu/18.04/multiarch/prod.list > ./microsoft-prod.list \n sudo cp ./microsoft-prod.list /etc/apt/sources.list.d/   \n curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg  \n sudo cp ./microsoft.gpg /etc/apt/trusted.gpg.d/  \n sudo apt-get update  \n sudo apt-get install iotedge=1.0.9* libiothsm-std=1.0.9*  \n  sed -i \"s#\\(device_connection_string: \\).*#\\1\\\"', variables('dcs'), '\\\"#g\" /etc/iotedge/config.yaml  \n sudo systemctl restart iotedge  \n sudo bash -c \"$(curl -sL ', parameters('_artifactsLocation'), 'Spatialcontainer.sh)\"\n    ) &\n'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-08-01",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "destinationAddressPrefix": "*",
                            "priority": 100
                        }
                    }
                ]
            },
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "comments": "This is the public IP address to connect to the VM.",
            "apiVersion": "2019-06-01",
            "name": "[variables('pipName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": "[parameters('resourceTags')]"
        },
        
        {
            "type": "Microsoft.Network/networkInterfaces",
            "comments": "Nic.",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('vmName'),'-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "public-ip-for-vm",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "publicIPAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                  "customData": "[variables('customData')]"
                }
            }
        },
        {
             "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(parameters('vmName'),'/NvidiaGpuDriverLinux')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                 "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                             ],
            "properties": {
                "publisher": "Microsoft.HpcCompute",
                "type": "NvidiaGpuDriverLinux",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": true,
                "settings": {}
            }
         },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "comments": "This vnet will host the IoT Edge device.",
            "apiVersion": "2019-06-01",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/26"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/27"
                        }
                    }
                  
                ]
            },
            "tags": "[parameters('resourceTags')]"
        }       
    ],
    "outputs": {
    }
}